use("db_campus_alquiler");
db.createCollection("Cliente");
db.Cliente.insertMany([{
    ID:1,
    Nombre:"Juan",
    Apellido:"Perez",
    DNI:"12345678",
    Direccion:"Calle 123",
    Telefono:"11111111",
    Email:"juan@example.com"
},{    
    ID:2,
    Nombre:"Maria",
    Apellido:"Lopez",
    DNI:"87654321",
    Direccion:"Avenida 456",
    Telefono:"22222222",
    Email:"maria@example.com"
},{
    ID:3,
    Nombre:"Pedro",
    Apellido:"Gonzalez",
    DNI:"56789012",
    Direccion:"Plaza 789",
    Telefono:"33333333",
    Email:"pedro@example.com" 
},{
    ID:4,
    Nombre:"Laura",
    Apellido:"Martinez",
    DNI:"09876543",
    Direccion:"Ruta 101",
    Telefono:"44444444",
    Email:"laura@example.com" 
},{
    ID:5,
    Nombre:"Carlos",
    Apellido:"Gomez",
    DNI:"43210987",
    Direccion:"Calle 987",
    Telefono:"55555555",
    Email:"carlos@example.com" 
}])

use("db_campus_alquiler");
db.createCollection("Automovil");
db.Automovil.insertMany([{
    ID:1,
    Marca:"Toyota",
    Modelo:"Corolla",
    Anio:2021,
    Tipo:"Sedan",
    Capacidad:5,
    Precio_Diario:50.00
},{
    ID:2,
    Marca:"Honda",
    Modelo:"Civic",
    Anio:2020,
    Tipo:"Sedan",
    Capacidad:5,
    Precio_Diario:45.00
},{
    ID:3,
    Marca:"Ford",
    Modelo:"Explorer",
    Anio:2019,
    Tipo:"SUV",
    Capacidad:7,
    Precio_Diario:60.00
},{
    ID:4,
    Marca:"Chevrolet",
    Modelo:"Equinox",
    Anio:2022,
    Tipo:"SUV",
    Capacidad:5,
    Precio_Diario:55.00
},{
    ID:5,
    Marca:"Nissan",
    Modelo:"Sentra",
    Anio:2022,
    Tipo:"Sedan",
    Capacidad:4,
    Precio_Diario:48.00
},])

use("db_campus_alquiler");
db.createCollection("Alquiler");
db.Alquiler.insertMany([{
    ID:1,
    Cliente_ID:1,
    Automovil_ID:3,
    Fecha_Inicio:"2023-07-01",
    Fecha_Fin:"2023-07-05",
    Costo_Total:240.00,
    Estado:"Activo"
},{
    ID:2,
    Cliente_ID:2,
    Automovil_ID:4,
    Fecha_Inicio:"2023-07-02",
    Fecha_Fin:"2023-07-07",
    Costo_Total:275.00,
    Estado:"Disponible"
},{
    ID:3,
    Cliente_ID:3,
    Automovil_ID:1,
    Fecha_Inicio:"2023-07-03",
    Fecha_Fin:"2023-07-06",
    Costo_Total:150.00,
    Estado:"Activo"
},{
    ID:4,
    Cliente_ID:4,
    Automovil_ID:5,
    Fecha_Inicio:"2023-07-04",
    Fecha_Fin:"2023-07-08",
    Costo_Total:192.00,
    Estado:"Activo"
},{
    ID:5,
    Cliente_ID:5,
    Automovil_ID:2,
    Fecha_Inicio:"2023-07-05",
    Fecha_Fin:"2023-07-09",
    Costo_Total:225.00,
    Estado:"Disponible"
}]);

use("db_campus_alquiler")
db.createCollection("Reserva")
db.Reserva.insertMany([
{
    ID:1,
    Cliente_ID:2,
    Automovil_ID:1,
    Fecha_Reserva:"2023-07-06",
    Fecha_Inicio:"2023-07-10",
    Fecha_Fin:"2023-07-15",
    Estado:"Pendiente"
},
{
    ID:2,
    Cliente_ID:3,
    Automovil_ID:3,
    Fecha_Reserva:"2023-07-07",
    Fecha_Inicio:"2023-07-12",
    Fecha_Fin:"2023-07-17",
    Estado:"Pendiente"
},
{
    ID:3,
    Cliente_ID:4,
    Automovil_ID:2,
    Fecha_Reserva:"2023-07-07",
    Fecha_Inicio:"2023-07-12",
    Fecha_Fin:"2023-07-17",
    Estado:"Pendiente"
},
{
    ID:4,
    Cliente_ID:5,
    Automovil_ID:4,
    Fecha_Reserva:"2023-07-09",
    Fecha_Inicio:"2023-07-15",
    Fecha_Fin:"2023-07-20",
    Estado:"Pendiente"
},
{
    ID:5,
    Cliente_ID:1,
    Automovil_ID:5,
    Fecha_Reserva:"2023-07-10",
    Fecha_Inicio:"2023-07-16",
    Fecha_Fin:"2023-07-21",
    Estado:"Pendiente"
}]);

use("db_campus_alquiler");
db.createCollection("Sucursal");
db.Sucursal.insertMany([
{
    ID:1,
    Nombre:"Sucursal A",
    Direccion:"Calle Principal 123",
    Telefono:"1111111111"
},
{
    ID:2,
    Nombre:"Sucursal B",
    Direccion:"Avenida Central 456",
    Telefono:"2222222222"
},
{
    ID:3,
    Nombre:"Sucursal C",
    Direccion:"Plaza Principal 789",
    Telefono:"3333333333"
},
{
    ID:4,
    Nombre:"Sucursal D",
    Direccion:"Ruta Secundaria 101",
    Telefono:"4444444444"
},
{
    ID:5,
    Nombre:"Sucursal E",
    Direccion:"Carretera Principal 987",
    Telefono:"5555555555"
}]);

use("db_campus_alquiler");
db.createCollection("Sucursal_Automovil");
db.Sucursal_Automovil.insertMany([
{
    Sucursal_ID:1,
    Automovil_ID:1,
    Cantidad_Disponible:3,
},
{
    Sucursal_ID:2,
    Automovil_ID:2,
    Cantidad_Disponible:5,
},
{
    Sucursal_ID:3,
    Automovil_ID:3,
    Cantidad_Disponible:2,
},
{
    Sucursal_ID:4,
    Automovil_ID:4,
    Cantidad_Disponible:4,
},
{
    Sucursal_ID:5,
    Automovil_ID:5,
    Cantidad_Disponible:1,
}]);

use("db_campus_alquiler");
db.createCollection("Empleado");
db.Empleado.insertMany([
{
    ID:1,
    Nombre:"Ana",
    Apellido:"Gomez",
    DNI:"123456789",
    Direccion:"Calle 111",
    Telefono:"1111111111",
    Cargo:"Gerente"
},
{
    ID:2,
    Nombre:"Luis",
    Apellido:"Rodriguez",
    DNI:"987654321",
    Direccion:"Avenida 222",
    Telefono:"2222222222",
    Cargo:"Asistente"
},
{
    ID:3,
    Nombre:"Elena",
    Apellido:"Fernandez",
    DNI:"456789012",
    Direccion:"Plaza 333",
    Telefono:"3333333333",
    Cargo:"Vendedor"
},
{
    ID:4,
    Nombre:"Mario",
    Apellido:"Torres",
    DNI:"210987654",
    Direccion:"Ruta 444",
    Telefono:"4444444444",
    Cargo:"Recepcionista"
},
{
    ID:5,
    Nombre:"Carlos",
    Apellido:"Hernandez",
    DNI:"543210987",
    Direccion:"Carretera 555",
    Telefono:"5555555555",
    Cargo:"Chofer"
}]);

use("db_campus_alquiler");
db.createCollection("Registro_Entrega")
db.Registro_Entrega.insertMany([
{
    Registro_ID:1,
    Alquiler_ID:1,
    Empleado_ID:3, 
    Fecha_Entrega:"2023-07-05",
    Combustible_Entregado:40.00,
    Kilometraje_Entregado:2000,
},
{
    Registro_ID:2,
    Alquiler_ID:2,
    Empleado_ID:4, 
    Fecha_Entrega:"2023-07-07",
    Combustible_Entregado:30.00,
    Kilometraje_Entregado:1800,
},
{
    Registro_ID:3,
    Alquiler_ID:3,
    Empleado_ID:1, 
    Fecha_Entrega:"2023-07-06",
    Combustible_Entregado:45.00,
    Kilometraje_Entregado:2200,
},
{
    Registro_ID:4,
    Alquiler_ID:4,
    Empleado_ID:5, 
    Fecha_Entrega:"2023-07-08",
    Combustible_Entregado:50.00,
    Kilometraje_Entregado:2400,
},
{
    Registro_ID:5,
    Alquiler_ID:5,
    Empleado_ID:2, 
    Fecha_Entrega:"2023-07-09",
    Combustible_Entregado:35.00,
    Kilometraje_Entregado:1900,
},

])

use("db_campus_alquiler");
db.createCollection("Registro_Devolucion");
db.Registro_Devolucion.insertMany([
{
    Registro_ID:1,
    Alquiler_ID:1,
    Empleado_ID:3,
    Fecha_Devolucion:'2023-07-10',
    Combustible_Devuelto:10.00,
    Kilometraje_Devuelto:2500,
    Monto_Adicional:20.00,
},
{
    Registro_ID:2,
    Alquiler_ID:2,
    Empleado_ID:4,
    Fecha_Devolucion:'2023-07-12',
    Combustible_Devuelto:15.00,
    Kilometraje_Devuelto:2100,
    Monto_Adicional:15.00,
},
{
    Registro_ID:3,
    Alquiler_ID:3,
    Empleado_ID:1,
    Fecha_Devolucion:'2023-07-11',
    Combustible_Devuelto:20.00,
    Kilometraje_Devuelto:2300,
    Monto_Adicional:25.00,
},
{
    Registro_ID:4,
    Alquiler_ID:4,
    Empleado_ID:5,
    Fecha_Devolucion:'2023-07-13',
    Combustible_Devuelto:25.00,
    Kilometraje_Devuelto:2600,
    Monto_Adicional:30.00,
},
{
    Registro_ID:5,
    Alquiler_ID:5,
    Empleado_ID:2,
    Fecha_Devolucion:'2023-07-14',
    Combustible_Devuelto:18.00,
    Kilometraje_Devuelto:2000,
    Monto_Adicional:12.00,
},
]);





//Consultas

//2. Listar todos los clientes
use("db_campus_alquiler");
db.Cliente.find();

//3. Listar los automoviles disponibles
use("db_campus_alquiler");
db.getCollection("Alquiler").aggregate([
    {
        $match: {Estado: "Disponible"}
    },
    {
        $lookup: {
          from: "Automovil",
          localField: "Automovil_ID",
          foreignField: "ID",
          as: "Alquiler_Disponible"
        }
    },
    {
        $project: {
          _id:0,
          "Alquiler_Disponible._id":0
        }
    }
]);

//4. Listar los alquiler activos
use("db_campus_alquiler");
db.getCollection("Cliente").aggregate([
    {
        $lookup: {
          from: "Alquiler",
          localField: "ID",
          foreignField: "Cliente_ID",
          as: "Alquiler_Activo"
        }
    },
    {
        $unwind:"$Alquiler_Activo"
    },
    {
        $match: {"Alquiler_Activo.Estado":"Activo"}
    },
    {
        $project: {
            _id:0,
            "Alquiler_Activo._id":0
        }
    },
    {
        $group: {
          _id: "$ID",
          Nombre: {
            $first: "$Nombre"
          },
          Apellido:{
            $first: "$Apellido"
          },
          Telefono:{
            $first: "$Telefono"
          },
          Alquiler_Activo:{$push:"$Alquiler_Activo"}
        }
    }
]);

// 5. Mostrar todas las reservas pendientes con los datos del cliente y el automovil reservado
use("db_campus_alquiler");
db.getCollection("Reserva").aggregate([
    {
        $match: {Estado:"Pendiente"}
    },
    {
        $lookup: {
          from: "Cliente",
          localField: "Cliente_ID",
          foreignField: "ID",
          as: "clientes"
        }
    },
    {
        $lookup: {
            from: "Automovil",
            localField: "Automovil_ID",
            foreignField: "ID",
            as: "Detalles_automoviles"
          }
    },
    {
        $project: {
            _id:0,
            "clientes._id":0,
            "Detalles_automoviles._id":0
        }
    },
]);

// 6. Obtener los detalles del alquiler mediante ID especifico
use("db_campus_alquiler");
db.Alquiler.find({ID:2},{_id:0});

// 7. Obtener los empleados con el cargo de VENDEDOR
use("db_campus_alquiler");
db.Empleado.find({Cargo:"Vendedor"},{_id:0});

//8. Obtener los automoviles disponibles en cada sucursal
use("db_campus_alquiler");
db.getCollection("Sucursal_Automovil").aggregate([
    {
        $lookup: {
          from: "Sucursal",
          localField: "Sucursal_ID",
          foreignField: "ID",
          as: "Sucursal_Info"
        }
    },
    {
        $lookup: {
          from: "Automovil",
          localField: "Automovil_ID",
          foreignField: "ID",
          as: "Automovil_Info"
        }
    },
    {
        $unwind: "$Sucursal_Info",
        $unwind: "$Automovil_Info"
    },
    {
        $group: {
          _id: "$Sucursal_ID",
          Cantidad_total_autos: {
            $sum: "$Cantidad_Disponible"
          }
        }
    }
]);
//9. Obtener el costo de un alquiler especifico
use("db_campus_alquiler");
db.Alquiler.find({ID:2},{_id:0, Costo_Total:1})

//10. Listar clientes con ID especifico
use("db_campus_alquiler");
db.Cliente.find({DNI:"12345678"},{_id:0});

// 11.  Listar vehiculos con capacidad de 5 o más
use("db_campus_alquiler");
db.Automovil.find({Capacidad:{$gte:5}},{_id:0});

// 12.  Listar alquiler por fecha especifica
use("db_campus_alquiler");
db.Alquiler.find({Fecha_Inicio:"2023-07-01"},{_id:0});

// 13.  Listar las reservas pendientes de un cliente especifico
use("db_campus_alquiler");
db.getCollection("Reserva").aggregate([
    {
        $match: {
          Cliente_ID:5,
          Estado:"Pendiente"
        }
    },
    {
        $lookup: {
          from: "Cliente",
          localField: "Cliente_ID",
          foreignField: "ID",
          as: "Cliente_Info"
        }
    },
    {
        $unwind: "$Cliente_Info"
    },
    {
        $lookup: {
          from: "Automovil",
          localField: "Automovil_ID",
          foreignField: "ID",
          as: "Auto_Info"
        }
    },
    {
        $unwind: "$Auto_Info"
    },
    {
        $project: {
          _id:0,
          "Cliente_Info._id":0,
          "Auto_Info._id":0
        }
    },
    {
        $group: {
          _id: "$ID",
          fecha_inicio: { $first: "$Fecha_Inicio" },
          fecha_fin: { $first: "$Fecha_Fin" },
          estado: { $first: "$Estado" },
          cliente_info: { $push: "$Cliente_Info" },
          automovil_info: { $push: "$Auto_Info" },
        }
    }
]);